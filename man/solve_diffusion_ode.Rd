% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/steady.R
\name{solve_diffusion_ode}
\alias{solve_diffusion_ode}
\title{Solve 2nd order ODE}
\usage{
solve_diffusion_ode(d, g, mu, n0, h)
}
\arguments{
\item{d}{A vector of diffusion coefficients \eqn{d_i} for each grid point}

\item{g}{A vector of advection coefficients \eqn{g_i} for each grid point}

\item{mu}{A vector of mortality coefficients \eqn{\mu_i} for each grid point}

\item{n0}{The value of \eqn{n} at the left boundary}

\item{h}{The grid spacing}
}
\value{
A vector of solutions \eqn{n_i} for each grid point
}
\description{
Solve ODE of the form
\deqn{(d(x) n'(x))'-(g(x)n(x))'-\mu(x)n(x)=0}
with boundary conditions \eqn{n(0)=n_0} and \eqn{n(N+1)=0}
using an upwind difference scheme.
}
\details{
For more details on the upwind difference scheme, see the vignette
\code{vignette("diffusion")}. This function is used by \code{\link[=steady_diffusion]{steady_diffusion()}}.
}
\examples{
d <- c(0, 1, 1, 0)
g <- c(0, 1, -1, 0)
mu <- c(0, 0.1, 0.1, 0)
n0 <- 1
h <- 1
solve_diffusion_steady(d, g, mu, n0, h)
}
